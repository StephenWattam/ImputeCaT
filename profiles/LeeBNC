# vi:syntax=ruby

# Corpus profile
#
# Designed to read Lee's BNC index as CSV
#
#
#

#Readability ranks:
# -  low: 664  items, mean = 62.95293871760397, sd = 14.424512199650604, var = 208.06655219786907
# -  med: 1651 items, mean = 55.44412267430666, sd = 12.76812426643693,  var = 163.02499728317557
# - high: 820  items, mean = 47.70965585209567, sd = 12.445956325065204, var = 154.90182884543054
# -  ---: 914  items, mean = 82.02288020623476, sd = 20.6424573733852,   var = 426.111046412025
AUDIENCE_LEVEL_FLEISCH_SCORES = {
  'low'  =>  62,
  'med'  =>  55,
  'high' =>  47
}



PROFILE = {

  # CSV fields mapped to their distribution type
  fields: {
          # 'Medium'      => Impute::DiscreteDistribution.new(),
          # 'Domain'      => Impute::DiscreteDistribution.new(),
          'GENRE'         => Impute::DiscreteDistribution.new(),
          'Word Total'    => Impute::SmoothedGaussianDistribution.new(30),
          # 'Flesch'        => Impute::SmoothedGaussianDistribution.new(13.16 / 4),
          # 'Author Type' => Impute::DiscreteDistribution.new(),
          'Aud Level'     => Impute::DiscreteDistribution.new(),
          # 'Aud Age'     => Impute::DiscreteDistribution.new(),
          # 'Language'      => Impute::DiscreteDistribution.new(),
  },

  # Parameters for the full conditional sampler
  resampling_params: {:z => 1.645, sd: 30},


  # Define heuristics
  heuristics: {
    'Word Total'    => Impute::Summarise::WordCount.new( 10000 ),
    'GENRE'         => Impute::Summarise::Genre.new('./resources/list_classifier_dump.dat'),
                                                    #'resources/bnc_genre_frequencies/', './resources/stoplists/English.txt'),
    'Aud Level'     => Impute::Summarise::AudienceLevel.new(AUDIENCE_LEVEL_FLEISCH_SCORES),
  },


  # Define search strategies
  search_strategies: [
    # STUFF
    # Impute::Retrieve::Directed::BingGenreKeywordRetriever.new(SEARCH_KEY, './resources/bnc_genre_keywords/', 'GENRE', 'Language'),
    Impute::Retrieve::Directed::Simulator.new(Impute::DocumentStore.read('./test/fringe')),
  ],


  error_handler: Impute::Error::Mean.new(),


  docs_per_retrival_method: 10,

}


